#//-----------------------------------------------------------------------------
#// convert Julian date to calendar date
#// (algorithm adopted from Press et al.)
#//-----------------------------------------------------------------------------
function jul2cal(jd)
      gregjd = 2299161
#	//
#	// get the date from the Julian day number
#	//
#      jd=2453372.25
      math_intgr   = math_int(jd)
      frac    = jd - math_intgr

      if( math_intgr >= gregjd )
         tmp = math_int( ( (math_intgr - 1867216) - 0.25 ) / 36524.25 )
         j1  = math_intgr + 1 + tmp - math_int(0.25*tmp)
      else
         j1 = math_intgr
      endif
#	correction for hal0f day offset
      dayfrac = frac + 0.0
      if( dayfrac >= 1.0 )
         dayfrac = dayfrac - 1.0
         j1 = j1+1
      endif
      

      j2 = j1 + 1524
      j3 = math_int( 6680.0 + ( (j2 - 2439870) - 122.1 )/365.25 )
      j4 = math_int(j3*365.25)
      j5 = math_int( (j2 - j4)/30.6001 )

      dia = math_int(j2 - j4 - math_int(j5*30.6001))
      mes = math_int(j5 - 1)
      if( mes > 12 )
         mes = mes- 12
      endif
      
      Ano = math_int(j3 - 4715)
      
      if( mes > 2 )
         Ano = Ano - 1
      endif
      if( Ano <= 0 )
         Ano = Ano - 1
      endif
#	//
#	// get time of day from day fraction
#	//
      hora  = math_int(dayfrac * 24.0)
      min  = math_int((dayfrac*24.0 - hora)*60.0)
      f   = ((dayfrac*24.0 - hora)*60.0 - min)*60.0
      seg  = math_int(f)

      f = f - seg
      if( f > 0.5 )
         seg = seg +1
      endif
      if( seg = 60 )
         seg = 0
         min = min + 1
      endif
      if( min = 60 )
         min = 0
         hora = hora +1
      endif
      if( hora = 24 )
         hora = 0
         dia = dia + 1
      endif

      if( Ano < 0 )
          Ano = -Ano
      endif

      jul2cal=(Ano*1000000)+(mes*10000)+(dia*100)+hora

return(jul2cal) 
